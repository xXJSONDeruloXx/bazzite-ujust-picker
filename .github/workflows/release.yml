name: Build and Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache: true

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  auto-tag:
    runs-on: ubuntu-latest
    # Only run on push to main and not on tag creation
    if: github.ref == 'refs/heads/main' && !startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate Tag and Release
        run: |
          # Get the latest version tag
          git fetch --tags
          LATEST_TAG=$(git tag -l 'v*' --sort=-v:refname | head -n 1)
          
          if [ -z "$LATEST_TAG" ]; then
            # No existing tag, start with v0.1.0
            NEW_TAG="v0.1.0"
          else
            # Increment the patch version
            VERSION=${LATEST_TAG#v}
            MAJOR=$(echo $VERSION | cut -d. -f1)
            MINOR=$(echo $VERSION | cut -d. -f2)
            PATCH=$(echo $VERSION | cut -d. -f3)
            PATCH=$((PATCH + 1))
            NEW_TAG="v$MAJOR.$MINOR.$PATCH"
          fi
          
          echo "Creating new tag: $NEW_TAG"
          
          # Configure Git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Create and push tag
          git tag -a $NEW_TAG -m "Auto-generated release $NEW_TAG"
          git push origin $NEW_TAG
